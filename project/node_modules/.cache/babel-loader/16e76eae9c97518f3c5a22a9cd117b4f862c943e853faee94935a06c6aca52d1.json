{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAVAN\\\\Desktop\\\\combined\\\\demandion\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css'; // Make sure to create this CSS file or integrate the styles in your main CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSendMessage = e => {\n    if (e.key === 'Enter' && input.trim() !== '') {\n      const userMessage = {\n        type: 'user',\n        text: input\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n\n      // Call the Flask API running on localhost:5000/chatbot\n      fetch('http://localhost:5000/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: input\n        })\n      }).then(response => response.json()).then(data => {\n        const botMessage = {\n          type: 'bot',\n          text: data.answer\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      }).catch(error => {\n        console.error('Error:', error);\n        const errorMessage = {\n          type: 'bot',\n          text: 'Error occurred while fetching response from bot'\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      });\n      setInput(''); // Clear input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      id: \"chatbot-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot-message ${message.type === 'user' ? 'user-message' : 'bot-message'}`,\n        children: [message.type === 'user' ? 'You: ' : 'Bot: ', message.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"chatbot-input\",\n      placeholder: \"Type a message and press Enter...\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyPress: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSendMessage","e","key","trim","userMessage","type","text","prevMessages","fetch","method","headers","body","JSON","stringify","question","then","response","json","data","botMessage","answer","catch","error","console","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","message","index","placeholder","value","onChange","target","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/PAVAN/Desktop/combined/demandion/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css'; // Make sure to create this CSS file or integrate the styles in your main CSS file\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSendMessage = (e) => {\r\n    if (e.key === 'Enter' && input.trim() !== '') {\r\n      const userMessage = { type: 'user', text: input };\r\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n      // Call the Flask API running on localhost:5000/chatbot\r\n      fetch('http://localhost:5000/chatbot', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ question: input }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const botMessage = { type: 'bot', text: data.answer };\r\n          setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error);\r\n          const errorMessage = { type: 'bot', text: 'Error occurred while fetching response from bot' };\r\n          setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n        });\r\n\r\n      setInput(''); // Clear input field\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">Chatbot</div>\r\n      <div className=\"chatbot-messages\" id=\"chatbot-messages\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={index}\r\n            className={`chatbot-message ${message.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            {message.type === 'user' ? 'You: ' : 'Bot: '}\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"chatbot-input\"\r\n        placeholder=\"Type a message and press Enter...\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyPress={handleSendMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}