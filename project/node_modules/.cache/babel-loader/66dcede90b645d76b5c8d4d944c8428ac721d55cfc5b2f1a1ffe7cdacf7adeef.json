{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAVAN\\\\Desktop\\\\combined\\\\demandion\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [showChat, setShowChat] = useState(false); // Control chat visibility\n  const [messages, setMessages] = useState([]); // Store chat messages\n  const [input, setInput] = useState(''); // Store user input\n\n  const toggleChatbox = () => {\n    setShowChat(!showChat);\n  };\n  const handleInputKeyPress = e => {\n    if (e.key === 'Enter' && input.trim() !== '') {\n      const userMessage = `You: ${input}`;\n      setMessages([...messages, userMessage]);\n\n      // Fetch response from the chatbot (dummy fetch here)\n      fetch('/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question: input\n        })\n      }).then(response => response.json()).then(data => {\n        const botMessage = `Bot: ${data.answer}`;\n        setMessages([...messages, userMessage, botMessage]);\n      }).catch(error => console.error('Error:', error));\n      setInput(''); // Clear input\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"chatbot-btn\",\n      onClick: toggleChatbox,\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), showChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chatbot-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chatbot-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chatbot-input\",\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleInputKeyPress,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Chatbot, \"FxP4zioh/FUQFFCqzwYHlWVYOj8=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","showChat","setShowChat","messages","setMessages","input","setInput","toggleChatbox","handleInputKeyPress","e","key","trim","userMessage","fetch","method","headers","body","JSON","stringify","question","then","response","json","data","botMessage","answer","catch","error","console","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","target","onKeyPress","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PAVAN/Desktop/combined/demandion/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Chatbot() {\r\n    const [showChat, setShowChat] = useState(false);  // Control chat visibility\r\n    const [messages, setMessages] = useState([]);     // Store chat messages\r\n    const [input, setInput] = useState('');           // Store user input\r\n\r\n    const toggleChatbox = () => {\r\n        setShowChat(!showChat);\r\n    };\r\n\r\n    const handleInputKeyPress = (e) => {\r\n        if (e.key === 'Enter' && input.trim() !== '') {\r\n            const userMessage = `You: ${input}`;\r\n            setMessages([...messages, userMessage]);\r\n\r\n            // Fetch response from the chatbot (dummy fetch here)\r\n            fetch('/chatbot', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ question: input }),\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const botMessage = `Bot: ${data.answer}`;\r\n                setMessages([...messages, userMessage, botMessage]);\r\n            })\r\n            .catch(error => console.error('Error:', error));\r\n\r\n            setInput(''); // Clear input\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button id=\"chatbot-btn\" onClick={toggleChatbox}>\r\n                Chat\r\n            </button>\r\n\r\n            {showChat && (\r\n                <div id=\"chatbot-box\">\r\n                    <div id=\"chatbot-messages\">\r\n                        {messages.map((msg, index) => (\r\n                            <div key={index}>{msg}</div>\r\n                        ))}\r\n                    </div>\r\n                    <input\r\n                        id=\"chatbot-input\"\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={handleInputKeyPress}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAClD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAK;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAW;;EAElD,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxBL,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,MAAMO,mBAAmB,GAAIC,CAAC,IAAK;IAC/B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAIL,KAAK,CAACM,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1C,MAAMC,WAAW,GAAG,QAAQP,KAAK,EAAE;MACnCD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAES,WAAW,CAAC,CAAC;;MAEvC;MACAC,KAAK,CAAC,UAAU,EAAE;QACdC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAEd;QAAM,CAAC;MAC5C,CAAC,CAAC,CACDe,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;QACV,MAAMC,UAAU,GAAG,QAAQD,IAAI,CAACE,MAAM,EAAE;QACxCrB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAES,WAAW,EAAEY,UAAU,CAAC,CAAC;MACvD,CAAC,CAAC,CACDE,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;MAE/CrB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACJ,CAAC;EAED,oBACIR,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAQgC,EAAE,EAAC,aAAa;MAACC,OAAO,EAAExB,aAAc;MAAAsB,QAAA,EAAC;IAEjD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERlC,QAAQ,iBACLH,OAAA;MAAKgC,EAAE,EAAC,aAAa;MAAAD,QAAA,gBACjB/B,OAAA;QAAKgC,EAAE,EAAC,kBAAkB;QAAAD,QAAA,EACrB1B,QAAQ,CAACiC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBxC,OAAA;UAAA+B,QAAA,EAAkBQ;QAAG,GAAXC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNrC,OAAA;QACIgC,EAAE,EAAC,eAAe;QAClBS,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnC,KAAM;QACboC,QAAQ,EAAGhC,CAAC,IAAKH,QAAQ,CAACG,CAAC,CAACiC,MAAM,CAACF,KAAK,CAAE;QAC1CG,UAAU,EAAEnC,mBAAoB;QAChCoC,WAAW,EAAC;MAAmB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnC,EAAA,CA1DQD,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AA4DhB,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}